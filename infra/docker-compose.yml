version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: postgres_db
    environment:
      POSTGRES_DB: ecom_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U user -d ecom_db']
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:6-alpine
    container_name: redis_cache
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  # Kafka with Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  # Minio (S3 compatible storage)
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001' # Minio Console Port
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  # Keycloak (Authentication & Authorization)
  keycloak:
    image: quay.io/keycloak/keycloak:18.0.0
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: keycloak_db
      DB_USER: keycloak
      DB_PASSWORD: password
      KC_HOSTNAME: localhost
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    command: start-dev

  # Placeholder for ClickHouse (Analytics DB)
  clickhouse:
    image: yandex/clickhouse-server
    container_name: clickhouse_db
    ports:
      - '8123:8123'
      - '9004:9000' # Changed from 9000 to 9004 to avoid conflict with Minio
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    environment:
      CLICKHOUSE_USER: user
      CLICKHOUSE_PASSWORD: password
      CLICKHOUSE_DB: analytics_db

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  minio_data:
  clickhouse_data:
